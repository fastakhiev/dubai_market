services:
  postgresdb:
    image: postgres:latest
    volumes:
      - ./entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
      - ./volumes/db/data:/var/lib/postgresql/data
      - ./volumes/db/log:/var/log/postgresql
    container_name: postgresdb
    env_file:
      - .env
    ports:
      - 44433:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U meta_db_user -d db" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always
    networks:
      - dubai_bot

  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    env_file:
      - .env
    volumes:
      - ./dockerfiles/redis/data:/data
      - ./redis-config/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - dubai_bot

  elasticsearch:
    image: elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./dockerfiles/elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      - dubai_bot


  dubai_bot:
    build:
      context: .
      dockerfile: dockerfile
    volumes:
      - ./backend:/usr/app
    restart: always
    expose:
      - 8005
    ports:
      - "8005:8005"
    depends_on:
      postgresdb:
        condition: service_healthy
    command: sh -c "python3 main.py"
    networks:
      - dubai_bot

networks:
  dubai_bot:
    external: true